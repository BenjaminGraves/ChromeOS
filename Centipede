/*
* Copyright (c) 2016, Amplified IT
* See the full description at http://labs.amplifiedit.com/centipede
* 
* Support forums are available at https://plus.google.com/communities/100599537603662785064
*
* Published under an MIT License https://opensource.org/licenses/MIT
*
*/

#include <Keyboard.h>

/* Modify the following definitions to fit your wireless and enrollment credentials. */

#define wifi_name "ssid" // Define SSID for your wireless connection.
#define wifi_pass "wifi_password" // Define the password for your wireless connection.
#define wifi_security 2 // Set to 0 for open, 1 for WEP, 2 for WPA
#define username "username@domain.com" // Define the user name for enrolling the device.
#define password "password" // The password for the enrollment GAFE account.

int buttonPin = 2;  // Set a button to any pin
int RXLED = 17;
static uint8_t __clock_prescaler = (CLKPR & (_BV(CLKPS0) | _BV(CLKPS1) | _BV(CLKPS2) | _BV(CLKPS3)));

// Special characters definition
#define KEY_LEFT_CTRL  0x80
#define KEY_LEFT_SHIFT 0x81
#define KEY_LEFT_ALT   0x82
#define KEY_RIGHT_CTRL 0x84
#define KEY_RIGHT_SHIFT    0x85
#define KEY_RIGHT_ALT  0x86
#define KEY_UP_ARROW   0xDA
#define KEY_DOWN_ARROW 0xD9
#define KEY_LEFT_ARROW 0xD8
#define KEY_RIGHT_ARROW    0xD7
#define KEY_BACKSPACE  0xB2
#define KEY_TAB        0xB3
#define KEY_ENTER 0xB0
#define KEY_ESC        0xB1
#define KEY_CAPS_LOCK  0xC1

void setup() {
  // put your setup code here, to run once:
  wifiConfig();
  wait(1);
  welcomeScreen();
  wait(15);
  enterEnrollment();
  wait(5);      
  enterCredentials();
  
}

void loop() {
  // put your main code here, to run repeatedly:
  
}

void wifiConfig() {
  wait(2);
  // TABs to enter Wifi Configuration. Change the number below to match if your devices require a different number of tabs to select the wifi configuration
  repeatKey(KEY_TAB, 4);
  wait(2);
  Keyboard.write(KEY_ENTER);
  // TAB 3 times to open other wifi settings
  repeatKey(KEY_TAB, 3);
  Keyboard.write(KEY_ENTER);
  wait(4    );
  //Wi-Fi Settings
  repeatKey(KEY_TAB, 3);
  Keyboard.write(KEY_ENTER);
  // SSID
  wait(2);
  Keyboard.print(wifi_name);
  wait(1);
  Keyboard.write(KEY_TAB);
  wait(1);
  if (wifi_security == 0) {
    repeatKey(KEY_TAB,2);
  } else {
    repeatKey(KEY_DOWN_ARROW, wifi_security);
    Keyboard.write(KEY_TAB);
    wait(1);
    // type wifi password
    Keyboard.print(wifi_pass);
    
  }
  wait(1);
  // Enter
  Keyboard.write(KEY_ENTER);
  wait(1);
  // Delay 10 seconds to connect
  /*wait(25);
  Keyboard.write(KEY_TAB);
  wait(1);
  Keyboard.write(KEY_ENTER);
  wait(2);
  enterEnrollment();
  Keyboard.write(KEY_ENTER);
  wait(1);*/
}

void welcomeScreen() {
  //Welcome screen
  repeatKey(KEY_TAB, 3);
  Keyboard.write(KEY_ENTER);
  wait(1);
  //Connect to netwerk
  repeatKey(KEY_TAB, 2);
  Keyboard.write(KEY_ENTER);
  wait(2);
  //Google Chrome OS terms
  repeatKey(KEY_TAB, 5);
  Keyboard.write(KEY_ENTER);
  wait(2);
}

void enterEnrollment() {
  Keyboard.press(KEY_LEFT_CTRL);
  Keyboard.press(KEY_LEFT_ALT);
  Keyboard.write('e');
  Keyboard.release(KEY_LEFT_ALT);
  Keyboard.release(KEY_LEFT_CTRL);
  wait(1);
}

void enterCredentials() {
  wait(4);
  Keyboard.print(username);
  Keyboard.press(KEY_LEFT_SHIFT);
  Keyboard.write(64);
  Keyboard.release(KEY_LEFT_SHIFT);
  Keyboard.print(domain);
  wait(2);
  Keyboard.write(KEY_ENTER);
  wait(4);
  Keyboard.print(password);
  wait(3);
  Keyboard.write(KEY_ENTER);
  wait(2);
}

void repeatKey(byte key, int num) {
  for (int i = 0; i < num; i++) {
    Keyboard.write(key);
    wait(1);
  }
}

void wait(int cycles) {
  for (int i = 0; i < cycles; i++) {
    blink();
  }
}

void blink() {
  digitalWrite(RXLED, LOW);
//  TXLED1;
  delay(250);
  digitalWrite(RXLED, HIGH);
//  TXLED0;
  delay(250);
}
